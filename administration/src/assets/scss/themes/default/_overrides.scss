// Anchor

a:not([href]) {
  color:           $link-color;
  cursor:          pointer;
  text-decoration: $link-decoration;
  transition:      $transition-color;

  &:hover {
    color:           $link-hover-color;
    text-decoration: $link-hover-decoration;
  }
}

// Buttons

.btn.disabled, .btn:disabled {
  cursor: not-allowed;
}

// Disabled
*:disabled, .disabled {
  cursor: not-allowed;
}

// Forms

label {
  font-size:   $label-font-size;
  font-weight: $label-font-weight;

  &.custom-control-label {
    padding-top: $custom-control-indicator-size - $label-font-size;
  }
}

.form-group {
  &.required label:after {
    content: '*';
    margin-left: $label-asterisk-margin-left;
    font-family: "Roboto", "Helvetica Neue", Arial, BlinkMacSystemFont, -apple-system, "Segoe UI", "Noto Sans", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    font-size: $label-asterisk-font-size;
    color: $primary;
    display: inline-block;
    font-weight: 500;
    line-height: 1;
    z-index: 1;
  }
}

.form-control {
  border-left: $form-control-border-left;

  &:focus {
    border-color: $input-border-color-focus;
  }
}

.form-control-plaintext {
  &:focus {
    outline: solid 2px rgba($primary, .25);
  }
}

.custom-control-input {
  &[disabled],
  &:disabled {
    ~ .custom-control-label {
      cursor: not-allowed;
    }
  }
}

.text-center .custom-control-label {
  &::before {
    left: -($custom-control-gutter + $custom-control-indicator-size - .25rem);
  }

  // Foreground (icon)
  &::after {
    left: -($custom-control-gutter + $custom-control-indicator-size - .25rem);
  }
}

.was-validated .form-control:invalid,
.form-control.is-invalid {
  background-color: rgba($form-feedback-invalid-color, .1);
}

.was-validated .form-control:valid,
.form-control.is-valid {
  background-color: rgba($form-feedback-valid-color, .1);
}

.was-validated .form-control.form-control-sm:invalid,
.was-validated .form-control.form-control-sm:valid,
.form-control.form-control-sm.is-invalid,
.form-control.form-control-sm.is-valid {
  background-size: $input-height-inner-third $input-height-inner-third;
}

.password-toggle {
  background-color: $input-bg;
  padding: 0 .815rem;
  font-size: 1.15rem;
  line-height: 1.15rem;
}

.is-invalid .password-toggle {
  background-color: rgba($form-feedback-invalid-color, .1);;
}

.is-valid .password-toggle {
  background-color: rgba($form-feedback-valid-color, .1);;
}

// Navs

.nav-item {
  position: relative;
}

// Links

a {
  transition: $transition-color-fast;
}

.dropdown-menu a {
  outline: none;
  transition: none;
}

// Modals

.modal.blur {
  backdrop-filter: $modal-blur;
}

.modal-backdrop {
  opacity: $modal-backdrop-opacity;
}

.modal-header {
  .close {
    position: absolute;
    top: 0;
    right: 0;
    margin: 0;
    color: inherit;
  }
}

// Alerts

.alert {
  font-size: $alert-font-size;
}

// Table

.table {
  .tfoot-dark, .thead-dark {
    td {
      color: $table-dark-color;
      background-color: $table-dark-bg;
      border-color: $table-dark-border-color;
    }
  }

  .tfoot-light, .thead-light {
    td {
      color: $table-head-color;
      background-color: $table-head-bg;
      border-color: $table-border-color;
    }
  }
}

// Dropdown

.dropdown, .btn-group {
  .dropdown-menu {
    label {
      font-size: $dropdown-font-size;
    }

    .custom-control-label {
      &::before {
        top: ($dropdown-font-size * $line-height-base - $custom-control-indicator-size) / 2;
      }

      &::after {
        top: ($dropdown-font-size * $line-height-base - $custom-control-indicator-size) / 2;
      }
    }
  }

  a.dropdown-item {
    color: $dropdown-link-color;

    &:hover {
      background-color: $dropdown-link-hover-bg;
      color:            $dropdown-link-hover-color;
    }
  }
}
